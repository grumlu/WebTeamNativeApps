<Page
    x:Class="WebTeamWindows10Universal.View.WebTeamShell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:views="using:WebTeamWindows10Universal.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:statetriggers="using:WindowsStateTriggers"
    xmlns:resources="using:WebTeamWindows10Universal.Resources"
    xmlns:controls="using:WebTeamWindows10Universal.Controls"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/SplitViewStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="NavMenuItemTemplate" x:DataType="resources:NavMenuItem">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <!-- Showing a ToolTip and the Label is redundant.  We put the ToolTip on the icon.
                     It appears when the user hovers over the icon, but not the label which provides
                     value when the SplitView is 'Compact' while reducing the likelihood of showing
                     redundant information when the label is shown.-->
                    <FontIcon x:Name="Glyph" FontSize="16" Glyph="{x:Bind SymbolAsChar}" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTipService.ToolTip="{x:Bind Label}"/>
                    <TextBlock x:Name="Text" Grid.Column="1" Text="{x:Bind Label}" />
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>


    <Grid x:Name="OverlayGrid" Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Mobile">
                    <VisualState.Setters>
                        <Setter Target="ShellSplitView.DisplayMode" Value="Overlay" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <statetriggers:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!--Menu bar on top-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.Transitions>
                <TransitionCollection>
                    <EntranceThemeTransition FromHorizontalOffset="0" FromVerticalOffset="-30" />
                </TransitionCollection>
            </Grid.Transitions>

            <!-- hamburger -->
            <Button x:Name="HamburgerButton" Tapped="TogglePaneButton_Clicked" Width="48" Height="48" Background="{StaticResource HamburgerMenuBackgroundBrush}" Grid.Column="0">
                <TextBlock Text="{StaticResource MenuButtonText}" Style="{StaticResource SplitViewIconStyle}" FontSize="{StaticResource SplitViewLargeNavFontSize}"/>
            </Button>
            <CommandBar x:Name="CommandBar" VerticalAlignment="Top" Grid.Column="1">
                <AppBarSeparator />
                <AppBarButton Icon="LikeDislike" Label="Suggestions Bug report" Command="{Binding SuggestionOrBugReport}" />
                <CommandBar.Content>
                    <controls:PageHeader Grid.Column="1">
                        <controls:PageHeader.HeaderContent>
                            <TextBlock x:Name="PageTitle" Text="Title Here!" Style="{StaticResource PageTitleTextBlockStyle}" TextWrapping="NoWrap" />
                        </controls:PageHeader.HeaderContent>
                    </controls:PageHeader>
                </CommandBar.Content>
            </CommandBar>
        </Grid>

        <SplitView x:Name="ShellSplitView" IsPaneOpen="False" Grid.Row="1" DisplayMode="CompactOverlay">

            <SplitView.Transitions>
                <TransitionCollection>
                    <EntranceThemeTransition FromHorizontalOffset="-30" FromVerticalOffset="0" />
                </TransitionCollection>
            </SplitView.Transitions>

            <SplitView.Pane>
                <Grid Background="{StaticResource SplitViewBackgroundBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!-- A custom ListView to display the items in the pane.  The automation Name is set in the ContainerContentChanging event. -->
                    <controls:NavMenuListView x:Name="NavMenuList" Grid.Row="0"
                                          ContainerContentChanging="NavMenuItemContainerContentChanging"
                                          SelectionChanged="NavMenuList_SelectionChanged"
                                          ItemContainerStyle="{StaticResource NavMenuItemContainerStyle}"
                                          ItemTemplate="{StaticResource NavMenuItemTemplate}"
                                          ItemInvoked="NavMenuList_ItemInvoked">
                    </controls:NavMenuListView>

                    <controls:NavMenuListView x:Name="NavMenuListBottom" Grid.Row="1"
                                          TabIndex="3"
                                          ContainerContentChanging="NavMenuItemContainerContentChanging"
                                          SelectionChanged="NavMenuList_SelectionChanged"
                                          ItemContainerStyle="{StaticResource NavMenuItemContainerStyle}"
                                          ItemTemplate="{StaticResource NavMenuItemTemplate}"
                                          ItemInvoked="NavMenuList_ItemInvoked">
                    </controls:NavMenuListView>

                </Grid>
            </SplitView.Pane>

            <!-- OnNavigatingToPage we synchronize the selected item in the nav menu with the current page.
                 OnNavigatedToPage we move keyboard focus to the first item on the page after it's loaded. -->
            <Frame x:Name="frame"
                   Navigating="OnNavigatingToPage"
                   Navigated="OnNavigatedToPage">
                <Frame.ContentTransitions>
                    <TransitionCollection>
                        <NavigationThemeTransition>
                            <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                <EntranceNavigationTransitionInfo/>
                            </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                        </NavigationThemeTransition>
                    </TransitionCollection>
                </Frame.ContentTransitions>
            </Frame>
        </SplitView>
    </Grid>

</Page>
